import sys
from dataclasses import dataclass, fields
import subprocess


@dataclass
class Config:
    enable_ticket_references: bool = False
    monochrome: bool = False
    debug: bool = False
    references: bool = True
    sem3: bool = True
    sem4: bool = True
    strict_refs: bool = True
    reminders: bool = True

    def write_to_file(self, file):
        file.write("// FIXME: This config is autogenerated and should not be committed!\n\n\n")

        for field in fields(self):
            typst_field_name = field.name.replace("_", "-")
            value = getattr(self, field.name)
            if isinstance(value, bool):
                value = "true" if value else "false"
            else:
                raise NotImplementedError(f"Unknown type for field {field.name}: {type(value)}")
            file.write(f"#let {typst_field_name} = {value}\n")


targets = {
    "calculus": Config(
        
    ),
    # "calculus-no-references": Config(
    #     references=False
    # ),
    # "calculus-monochrome": Config(
    #     monochrome=True,
    # ),
    "calculus-sem3": Config(
        sem4=False,
    ),
    # "calculus-no-references-sem3": Config(
    #     references=False,
    #     sem4=False,
    # ),
    # "calculus-monochrome-sem3": Config(
    #     monochrome=True,
    #     sem4=False,
    # ),
    "calculus-sem4": Config(
        sem3=False,
        reminders=False,
    ),
    # "calculus-no-references-sem4": Config(
    #     references=False,
    #     sem3=False,
    #     reminders=False,
    # ),
    # "calculus-monochrome-sem4": Config(
    #     monochrome=True,
    #     sem3=False,
    #     reminders=False,
    # ),
}

any_failed = False

with open("config.typ", "r") as config_file:
    initial_config = config_file.read()


for target, config in targets.items():
    with open("config.typ", "w") as config_file:
        config.write_to_file(config_file)
    
    result = subprocess.run(["typst", "compile", "main.typ", f"{target}.pdf"])

    if result.returncode != 0:
        print(f"Failed to compile {target}")
        any_failed = True

with open("config.typ", "w") as config_file:
    config_file.write(initial_config)


if any_failed:
    sys.exit(1)
